{
  "v": 1,
  "id": "86d44e0b-8565-46bc-9eeb-44b84239007d",
  "rev": 1,
  "name": "Sophos XG",
  "summary": "Sophos XG Content Pack",
  "description": "This content pack for the Sophos XG Firewall and contains everything you need to visualize your firewall log data.",
  "vendor": "Jeff Singleton (@HackDefendr)",
  "url": "https://github.com/hackdefendr",
  "parameters": [],
  "entities": [
    {
      "v": "1",
      "type": {
        "name": "lookup_adapter",
        "version": "1"
      },
      "id": "8da6bc3a-c31c-4b32-8af6-42d0ce9f7050",
      "data": {
        "name": {
          "@type": "string",
          "@value": "geoip"
        },
        "title": {
          "@type": "string",
          "@value": "GeoIP"
        },
        "description": {
          "@type": "string",
          "@value": "GeoIP Lookup Table"
        },
        "configuration": {
          "type": {
            "@type": "string",
            "@value": "maxmind_geoip"
          },
          "path": {
            "@type": "string",
            "@value": "/etc/graylog/server/GeoLite2-City.mmdb"
          },
          "database_type": {
            "@type": "string",
            "@value": "MAXMIND_CITY"
          },
          "check_interval": {
            "@type": "long",
            "@value": 1
          },
          "check_interval_unit": {
            "@type": "string",
            "@value": "MINUTES"
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "44f1c867-0a2d-4c0d-97da-dad7f503d511",
      "data": {
        "title": {
          "@type": "string",
          "@value": "GeoIP lookup: src_ip"
        },
        "description": {
          "@type": "string",
          "@value": "Source GeoIP Lookup"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"GeoIP lookup: src_ip\"\n  when\n    has_field(\"src_ip\")\n  then\n    let geo = lookup(\"geoip\", to_string($message.src_ip));\n    set_field(\"src_ip_geo_location\", geo[\"coordinates\"]);\n    set_field(\"src_country_code\", geo[\"country\"].iso_code);\n    set_field(\"src_ip_geo_city\", geo[\"city\"].names.en);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_cache",
        "version": "1"
      },
      "id": "7c369560-4111-43d4-8da8-f2d8345b3adf",
      "data": {
        "name": {
          "@type": "string",
          "@value": "geoip"
        },
        "title": {
          "@type": "string",
          "@value": "GeoIp"
        },
        "description": {
          "@type": "string",
          "@value": "GeoIP Cache"
        },
        "configuration": {
          "type": {
            "@type": "string",
            "@value": "guava_cache"
          },
          "max_size": {
            "@type": "integer",
            "@value": 1000
          },
          "expire_after_access": {
            "@type": "long",
            "@value": 1
          },
          "expire_after_access_unit": {
            "@type": "string",
            "@value": "HOURS"
          },
          "expire_after_write": {
            "@type": "long",
            "@value": 0
          }
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "02d216b7-1df5-4f7a-ab05-722f4737c4c8",
      "data": {
        "title": {
          "@type": "string",
          "@value": "XG Log Type"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"XG Log Type\"\nwhen\n    to_string($message.source) == \"xg.lan.paravantage.com\"\nthen\n    set_fields(\n        grok(\n            pattern: \"log_type=%{QUOTEDSTRING:log_type} log_component=%{QUOTEDSTRING:log_component} log_subtype=%{QUOTEDSTRING:log_sub_type}\",\n            value: to_string($message.message),\n            only_named_captures: true\n        )\n    );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "search",
        "version": "1"
      },
      "id": "aa24e9c2-8956-4fe9-a750-218da58185ca",
      "data": {
        "summary": {
          "@type": "string",
          "@value": ""
        },
        "search": {
          "queries": [
            {
              "id": "b5e767e9-cd0c-42a9-94d7-8530d3da1880",
              "timerange": {
                "type": "relative",
                "range": 86400
              },
              "filter": {
                "type": "or",
                "filters": [
                  {
                    "type": "stream",
                    "filters": null,
                    "id": "b42a2545-a358-40e3-821c-32ee83ab5513",
                    "title": null
                  }
                ]
              },
              "query": {
                "type": "elasticsearch",
                "query_string": "!src_ip:10.71.1.* AND !src_ip:0.0.0.0"
              },
              "search_types": [
                {
                  "query": null,
                  "name": "chart",
                  "timerange": null,
                  "streams": [],
                  "series": [
                    {
                      "type": "count",
                      "id": "count()",
                      "field": null
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "time",
                      "field": "timestamp",
                      "interval": {
                        "type": "auto",
                        "scaling": 1
                      }
                    }
                  ],
                  "type": "pivot",
                  "id": "e754ccda-e8f5-4564-a234-e7f71a5fbcb2",
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": null,
                  "name": null,
                  "timerange": null,
                  "offset": 0,
                  "streams": [],
                  "filter": null,
                  "decorators": [
                    {
                      "id": "5ecaf9adcb6890d9f8e385b8",
                      "type": "org.graylog2.decorators.SyslogSeverityMapperDecorator",
                      "config": {
                        "source_field": "priority",
                        "target_field": "severity"
                      },
                      "stream": null,
                      "order": 0
                    }
                  ],
                  "type": "messages",
                  "id": "61e6edac-a116-4c31-859b-d289f732d0de",
                  "limit": 150
                }
              ]
            }
          ],
          "parameters": [],
          "requires": {},
          "owner": "admin",
          "created_at": "2020-05-25T14:58:54.635Z"
        },
        "created_at": "2020-05-24T13:12:08.441Z",
        "requires": {},
        "state": {
          "b5e767e9-cd0c-42a9-94d7-8530d3da1880": {
            "selected_fields": null,
            "static_message_list_id": null,
            "titles": {
              "widget": {
                "7d526158-ccc5-449b-a48e-9169ba106710": "Message Count",
                "8748bcba-1813-4b0c-9ede-2af6eadca6b6": "All Messages"
              }
            },
            "widgets": [
              {
                "id": "8748bcba-1813-4b0c-9ede-2af6eadca6b6",
                "type": "messages",
                "filter": null,
                "timerange": null,
                "query": null,
                "streams": [],
                "config": {
                  "fields": [
                    "timestamp",
                    "log_type",
                    "src_ip_city_name",
                    "src_ip_country_code",
                    "src_ip",
                    "dst_port",
                    "protocol",
                    "src_ip_geolocation"
                  ],
                  "show_message_row": false,
                  "decorators": [
                    {
                      "id": "5ecaf9adcb6890d9f8e385b8",
                      "type": "org.graylog2.decorators.SyslogSeverityMapperDecorator",
                      "config": {
                        "source_field": "priority",
                        "target_field": "severity"
                      },
                      "stream": null,
                      "order": 0
                    }
                  ],
                  "sort": [
                    {
                      "type": "pivot",
                      "field": "timestamp",
                      "direction": "Descending"
                    }
                  ]
                }
              },
              {
                "id": "7d526158-ccc5-449b-a48e-9169ba106710",
                "type": "aggregation",
                "filter": null,
                "timerange": null,
                "query": null,
                "streams": [],
                "config": {
                  "visualization": "bar",
                  "event_annotation": false,
                  "row_pivots": [
                    {
                      "field": "timestamp",
                      "type": "time",
                      "config": {
                        "interval": {
                          "type": "auto",
                          "scaling": null
                        }
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": null
                      },
                      "function": "count()"
                    }
                  ],
                  "rollup": true,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": null,
                  "sort": []
                }
              }
            ],
            "widget_mapping": {
              "7d526158-ccc5-449b-a48e-9169ba106710": [
                "e754ccda-e8f5-4564-a234-e7f71a5fbcb2"
              ],
              "8748bcba-1813-4b0c-9ede-2af6eadca6b6": [
                "61e6edac-a116-4c31-859b-d289f732d0de"
              ]
            },
            "positions": {
              "7d526158-ccc5-449b-a48e-9169ba106710": {
                "col": 1,
                "row": 5,
                "height": 2,
                "width": "Infinity"
              },
              "8748bcba-1813-4b0c-9ede-2af6eadca6b6": {
                "col": 1,
                "row": 7,
                "height": 6,
                "width": "Infinity"
              }
            },
            "formatting": {
              "highlighting": []
            },
            "display_mode_settings": {
              "positions": {}
            }
          }
        },
        "properties": [],
        "owner": "admin",
        "title": {
          "@type": "string",
          "@value": "Sophos XG Firewall"
        },
        "type": "SEARCH",
        "description": {
          "@type": "string",
          "@value": ""
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "lookup_table",
        "version": "1"
      },
      "id": "8a7cd94e-f212-40a7-a6b3-dd6a7e7b408d",
      "data": {
        "default_single_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "cache_name": {
          "@type": "string",
          "@value": "7c369560-4111-43d4-8da8-f2d8345b3adf"
        },
        "name": {
          "@type": "string",
          "@value": "geoip"
        },
        "default_multi_value_type": {
          "@type": "string",
          "@value": "NULL"
        },
        "default_multi_value": {
          "@type": "string",
          "@value": ""
        },
        "data_adapter_name": {
          "@type": "string",
          "@value": "8da6bc3a-c31c-4b32-8af6-42d0ce9f7050"
        },
        "title": {
          "@type": "string",
          "@value": "GeoIP"
        },
        "default_single_value": {
          "@type": "string",
          "@value": ""
        },
        "description": {
          "@type": "string",
          "@value": "GeoIP Lookup"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline",
        "version": "1"
      },
      "id": "bb64a282-3735-48d2-bf56-bb3ae19548d8",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Sophos XG"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "pipeline \"Sophos XG\"\nstage 0 match all\nrule \"priority name\"\nstage 1 match all\nrule \"GeoIP lookup: dst_ip\"\nrule \"GeoIP lookup: src_ip\"\nstage 2 match either\nrule \"XG Firewall Type\"\nrule \"XG Content Filter Type\"\nend"
        },
        "connected_streams": [
          {
            "@type": "string",
            "@value": "000000000000000000000001"
          }
        ]
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "5a7a4a01-1751-4cf4-98ca-21b2f6b7c3b7",
      "data": {
        "title": {
          "@type": "string",
          "@value": "priority name"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"priority name\"\nwhen\n    true\nthen\n    set_field(\"priority\",syslog_level($message.priority));\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "dashboard",
        "version": "2"
      },
      "id": "f4ff7511-1b2b-44f8-8f3b-dadd33daef6f",
      "data": {
        "summary": {
          "@type": "string",
          "@value": "Syslog from a Sophos XG Firewall to Graylog"
        },
        "search": {
          "queries": [
            {
              "id": "20b49579-1f4d-4493-8554-8e6cabc9367b",
              "timerange": {
                "type": "relative",
                "range": 300
              },
              "query": {
                "type": "elasticsearch",
                "query_string": ""
              },
              "search_types": [
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "!src_ip:10.71.1.* AND !src_ip:0.0.0.0"
                  },
                  "name": "chart",
                  "timerange": {
                    "type": "relative",
                    "range": 86400
                  },
                  "streams": [
                    "b42a2545-a358-40e3-821c-32ee83ab5513"
                  ],
                  "series": [
                    {
                      "type": "count",
                      "id": "count()",
                      "field": null
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "field": "src_ip_geolocation",
                      "limit": 15
                    }
                  ],
                  "type": "pivot",
                  "id": "73530461-b5f4-4fda-a9b5-c866aa5cbe8f",
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": ""
                  },
                  "name": "chart",
                  "timerange": {
                    "type": "relative",
                    "range": 86400
                  },
                  "streams": [],
                  "series": [
                    {
                      "type": "count",
                      "id": "count()",
                      "field": null
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [
                    {
                      "type": "values",
                      "field": "category",
                      "limit": 15
                    }
                  ],
                  "type": "pivot",
                  "id": "bc7ed6bc-3e71-41db-b589-826bb97239c9",
                  "column_groups": [],
                  "sort": []
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "!src_ip:10.71.1.* AND !src_ip:0.0.0.0"
                  },
                  "name": null,
                  "timerange": {
                    "type": "relative",
                    "range": 86400
                  },
                  "offset": 0,
                  "streams": [
                    "b42a2545-a358-40e3-821c-32ee83ab5513"
                  ],
                  "filter": null,
                  "decorators": [
                    {
                      "id": "5ecc355dcb6890d9f8e385dd",
                      "type": "org.graylog2.decorators.FormatStringDecorator",
                      "config": {
                        "format_string": "${source} - ${message}",
                        "require_all_fields": false,
                        "target_field": "message"
                      },
                      "stream": null,
                      "order": 0
                    }
                  ],
                  "type": "messages",
                  "id": "d3045ae1-d4bb-4819-87c4-8188c2f919f7",
                  "limit": 150
                },
                {
                  "query": {
                    "type": "elasticsearch",
                    "query_string": "!src_ip:10.71.1.* AND !src_ip:0.0.0.0"
                  },
                  "name": "chart",
                  "timerange": {
                    "type": "relative",
                    "range": 86400
                  },
                  "streams": [
                    "b42a2545-a358-40e3-821c-32ee83ab5513"
                  ],
                  "series": [
                    {
                      "type": "count",
                      "id": "Message Count",
                      "field": null
                    }
                  ],
                  "filter": null,
                  "rollup": true,
                  "row_groups": [],
                  "type": "pivot",
                  "id": "23d3f6e6-832d-4079-a794-9507498c787a",
                  "column_groups": [],
                  "sort": []
                }
              ]
            }
          ],
          "parameters": [],
          "requires": {},
          "owner": "admin",
          "created_at": "2020-05-25T23:19:47.032Z"
        },
        "created_at": "2020-05-25T20:55:23.770Z",
        "requires": {},
        "state": {
          "20b49579-1f4d-4493-8554-8e6cabc9367b": {
            "selected_fields": null,
            "static_message_list_id": null,
            "titles": {
              "tab": {
                "title": "Sophos XG"
              },
              "widget": {
                "f01768a4-3a01-4237-b9fc-3e7cb0b2c1ff": "Sophos XG Messages"
              }
            },
            "widgets": [
              {
                "id": "52ca40cb-873f-431d-bd4f-20182e233aaa",
                "type": "aggregation",
                "filter": null,
                "timerange": {
                  "type": "relative",
                  "range": 86400
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": "!src_ip:10.71.1.* AND !src_ip:0.0.0.0"
                },
                "streams": [
                  "b42a2545-a358-40e3-821c-32ee83ab5513"
                ],
                "config": {
                  "visualization": "map",
                  "event_annotation": false,
                  "row_pivots": [
                    {
                      "field": "src_ip_geolocation",
                      "type": "values",
                      "config": {
                        "limit": 15
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": null
                      },
                      "function": "count()"
                    }
                  ],
                  "rollup": true,
                  "column_pivots": [],
                  "visualization_config": {
                    "viewport": {
                      "zoom": 2,
                      "center_x": 0,
                      "center_y": 0
                    }
                  },
                  "formatting_settings": null,
                  "sort": []
                }
              },
              {
                "id": "79b78e03-cdf7-4d44-aa23-1988270bf1e7",
                "type": "aggregation",
                "filter": null,
                "timerange": {
                  "type": "relative",
                  "range": 86400
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": ""
                },
                "streams": [],
                "config": {
                  "visualization": "pie",
                  "event_annotation": false,
                  "row_pivots": [
                    {
                      "field": "category",
                      "type": "values",
                      "config": {
                        "limit": 15
                      }
                    }
                  ],
                  "series": [
                    {
                      "config": {
                        "name": null
                      },
                      "function": "count()"
                    }
                  ],
                  "rollup": true,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": null,
                  "sort": []
                }
              },
              {
                "id": "f01768a4-3a01-4237-b9fc-3e7cb0b2c1ff",
                "type": "messages",
                "filter": null,
                "timerange": {
                  "type": "relative",
                  "range": 86400
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": "!src_ip:10.71.1.* AND !src_ip:0.0.0.0"
                },
                "streams": [
                  "b42a2545-a358-40e3-821c-32ee83ab5513"
                ],
                "config": {
                  "fields": [
                    "timestamp",
                    "source",
                    "src_ip",
                    "dst_port",
                    "src_ip_city_name",
                    "src_ip_country_code"
                  ],
                  "show_message_row": false,
                  "decorators": [
                    {
                      "id": "5ecc355dcb6890d9f8e385dd",
                      "type": "org.graylog2.decorators.FormatStringDecorator",
                      "config": {
                        "format_string": "${source} - ${message}",
                        "require_all_fields": false,
                        "target_field": "message"
                      },
                      "stream": null,
                      "order": 0
                    }
                  ],
                  "sort": [
                    {
                      "type": "pivot",
                      "field": "timestamp",
                      "direction": "Descending"
                    }
                  ]
                }
              },
              {
                "id": "8e609dc5-f302-4c7c-a52c-d690cdafeb37",
                "type": "aggregation",
                "filter": null,
                "timerange": {
                  "type": "relative",
                  "range": 86400
                },
                "query": {
                  "type": "elasticsearch",
                  "query_string": "!src_ip:10.71.1.* AND !src_ip:0.0.0.0"
                },
                "streams": [
                  "b42a2545-a358-40e3-821c-32ee83ab5513"
                ],
                "config": {
                  "visualization": "numeric",
                  "event_annotation": false,
                  "row_pivots": [],
                  "series": [
                    {
                      "config": {
                        "name": "Message Count"
                      },
                      "function": "count()"
                    }
                  ],
                  "rollup": true,
                  "column_pivots": [],
                  "visualization_config": null,
                  "formatting_settings": null,
                  "sort": []
                }
              }
            ],
            "widget_mapping": {
              "f01768a4-3a01-4237-b9fc-3e7cb0b2c1ff": [
                "d3045ae1-d4bb-4819-87c4-8188c2f919f7"
              ],
              "52ca40cb-873f-431d-bd4f-20182e233aaa": [
                "73530461-b5f4-4fda-a9b5-c866aa5cbe8f"
              ],
              "8e609dc5-f302-4c7c-a52c-d690cdafeb37": [
                "23d3f6e6-832d-4079-a794-9507498c787a"
              ],
              "79b78e03-cdf7-4d44-aa23-1988270bf1e7": [
                "bc7ed6bc-3e71-41db-b589-826bb97239c9"
              ]
            },
            "positions": {
              "8e609dc5-f302-4c7c-a52c-d690cdafeb37": {
                "col": 9,
                "row": 1,
                "height": 4,
                "width": 4
              },
              "79b78e03-cdf7-4d44-aa23-1988270bf1e7": {
                "col": 1,
                "row": 1,
                "height": 4,
                "width": 8
              },
              "f01768a4-3a01-4237-b9fc-3e7cb0b2c1ff": {
                "col": 1,
                "row": 11,
                "height": 5,
                "width": "Infinity"
              },
              "52ca40cb-873f-431d-bd4f-20182e233aaa": {
                "col": 1,
                "row": 5,
                "height": 6,
                "width": "Infinity"
              }
            },
            "formatting": {
              "highlighting": []
            },
            "display_mode_settings": {
              "positions": {}
            }
          }
        },
        "properties": [],
        "owner": "admin",
        "title": {
          "@type": "string",
          "@value": "Sophos XG Firewall"
        },
        "type": "DASHBOARD",
        "description": {
          "@type": "string",
          "@value": "This is a basic dashboard for displaying log data sent via Syslog from a Sophos XG Firewall to a Graylog instance."
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "ce66d735-1737-4694-a0bc-150a6e4a021d",
      "data": {
        "title": {
          "@type": "string",
          "@value": "GeoIP lookup: dst_ip"
        },
        "description": {
          "@type": "string",
          "@value": "Destination GeoIP Lookup"
        },
        "source": {
          "@type": "string",
          "@value": "rule \"GeoIP lookup: dst_ip\"\n  when\n    has_field(\"dst_ip\")\n  then\n    let geo = lookup(\"geoip\", to_string($message.dst_ip));\n    set_field(\"dst_ip_geo_location\", geo[\"coordinates\"]);\n    set_field(\"dst_country_code\", geo[\"country\"].iso_code);\n    set_field(\"dst_ip_geo_city\", geo[\"city\"].names.en);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "623e7a65-dbc0-4203-8f97-46be321bbdbc",
      "data": {
        "title": {
          "@type": "string",
          "@value": "Pipeline Processed Flag"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"Pipeline Processed Flag\"\nwhen\n    true\nthen\n    set_field(\"pipeline_processed\",true);\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "b696df0e-a8d6-4e35-87e7-1cfbbc4da62e",
      "data": {
        "title": {
          "@type": "string",
          "@value": "XG Event Authentication Type"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"XG Event Authentication Type\"\nwhen\n    (to_string($message.log_type) == \"Event\") && (to_string($message.log_sub_type) == \"Authentication\")\nthen\n    set_fields(\n        grok(\n            pattern: \"status=%{QUOTEDSTRING:status}%{SPACE}priority=%{WORD:priority}%{SPACE}user_name=%{QUOTEDSTRING:user_name}%{SPACE}usergroupname=%{QUOTEDSTRING:user_group}%{SPACE}auth_client=%{QUOTEDSTRING:auth_client}%{SPACE}auth_mechanism=%{QUOTEDSTRING:auth_mechanism}%{SPACE}reason=%{QUOTEDSTRING:reason}%{SPACE}src_ip=%{DATA:src_ip}%{SPACE}message=%{QUOTEDSTRING:auth_message}%{SPACE}name=%{QUOTEDSTRING:name}%{SPACE}src_mac=%{DATA:src_mac}\",\n            value: to_string($message.message),\n            only_named_captures: true\n        )\n    );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "00078048-0387-47f8-9285-30b2665e9cd1",
      "data": {
        "title": {
          "@type": "string",
          "@value": "XG System Type"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"XG System Type\"\nwhen\n    to_string($message.log_sub_type) == \"System\"\nthen\n    set_fields(\n        grok(\n            pattern: \"(status=%{QUOTEDSTRING:status})?%{SPACE}priority=%{WORD:priority}%{SPACE}(status=%{QUOTEDSTRING:status})?%{GREEDYDATA}message=%{QUOTEDSTRING:system_message}\",\n            value: to_string($message.message),\n            only_named_captures: true\n        )\n    );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "c10fb17f-5941-44ec-9ca6-74559601f10b",
      "data": {
        "title": {
          "@type": "string",
          "@value": "XG Content Filter Type"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"XG Content Filter Type\"\nwhen\n    to_string($message.log_type) == \"Content Filtering\"\nthen\n    set_fields(\n        grok(\n            pattern: \"status=%{QUOTEDSTRING:action}%{SPACE}priority=%{GREEDYDATA:priority}%{SPACE}fw_rule_id=%{INT:fw_rule_id}%{SPACE}user_name=%{QUOTEDSTRING:user_name}%{SPACE}user_gp=%{QUOTEDSTRING:user_group}%{SPACE}iap=%{INT:iap}%{SPACE}category=%{QUOTEDSTRING:category}%{SPACE}category_type=%{QUOTEDSTRING:category_type}%{SPACE}url=%{QUOTEDSTRING:url}%{SPACE}contenttype=%{QUOTEDSTRING:content_type}%{SPACE}override_token=%{QUOTEDSTRING:override_token}%{SPACE}httpresponsecode=%{QUOTEDSTRING:http_response_code}%{SPACE}src_ip=%{IP:src_ip}%{SPACE}dst_ip=%{IP:dst_ip}%{SPACE}protocol=%{QUOTEDSTRING:protocol}%{SPACE}src_port=%{INT:src_port}%{SPACE}dst_port=%{INT:dst_port}%{SPACE}sent_bytes=%{INT:sent_bytes;int}%{SPACE}recv_bytes=%{INT:recv_bytes;int}%{SPACE}domain=%{URIHOST:domain}%{SPACE}exceptions=%{DATA:exceptions}%{SPACE}activityname=%{QUOTEDSTRING:activity_name}%{SPACE}reason=%{QUOTEDSTRING:reason}%{SPACE}user_agent=%{QUOTEDSTRING:user_agent}%{SPACE}status_code=%{QUOTEDSTRING:status_code}%{SPACE}transactionid=%{DATA:transaction_id}%{SPACE}referer=%{QUOTEDSTRING:referer}%{SPACE}download_file_name=%{QUOTEDSTRING:downloaded_file_name}%{SPACE}download_file_type=%{QUOTEDSTRING:downloaded_file_type}%{SPACE}upload_file_name=%{QUOTEDSTRING}%{SPACE}upload_file_type=%{QUOTEDSTRING}%{SPACE}con_id=%{INT:con_id}%{SPACE}application=%{QUOTEDSTRING:application}%{SPACE}app_is_cloud=%{INT:app_is_cloud;boolean}\",\n            value: to_string($message.message),\n            only_named_captures: true\n        )\n    );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "stream",
        "version": "1"
      },
      "id": "b42a2545-a358-40e3-821c-32ee83ab5513",
      "data": {
        "alarm_callbacks": [],
        "outputs": [],
        "remove_matches": {
          "@type": "boolean",
          "@value": true
        },
        "title": {
          "@type": "string",
          "@value": "Sophos XG Firewall"
        },
        "stream_rules": [
          {
            "type": {
              "@type": "string",
              "@value": "PRESENCE"
            },
            "field": {
              "@type": "string",
              "@value": "src_ip"
            },
            "value": {
              "@type": "string",
              "@value": ""
            },
            "inverted": {
              "@type": "boolean",
              "@value": false
            },
            "description": {
              "@type": "string",
              "@value": "src_ip fields must be present"
            }
          },
          {
            "type": {
              "@type": "string",
              "@value": "EXACT"
            },
            "field": {
              "@type": "string",
              "@value": "log_type"
            },
            "value": {
              "@type": "string",
              "@value": "Firewall"
            },
            "inverted": {
              "@type": "boolean",
              "@value": false
            },
            "description": {
              "@type": "string",
              "@value": ""
            }
          }
        ],
        "alert_conditions": [],
        "matching_type": {
          "@type": "string",
          "@value": "AND"
        },
        "disabled": {
          "@type": "boolean",
          "@value": false
        },
        "description": {
          "@type": "string",
          "@value": "Log Type Firewall"
        },
        "default_stream": {
          "@type": "boolean",
          "@value": false
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "7ea3b283-4690-4243-a0fc-e2770c19509e",
      "data": {
        "title": {
          "@type": "string",
          "@value": "XG Firewall Type"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"XG Firewall Type\"\nwhen\n    to_string($message.log_type) == \"Firewall\"\nthen\n    set_fields(\n        grok(\n            pattern: \"status=%{QUOTEDSTRING:action}%{SPACE}priority=%{WORD:priority}%{SPACE}duration=%{INT:duration}%{SPACE}fw_rule_id=%{INT:fw_rule_id}%{SPACE}policy_type=%{INT:policy_type}%{SPACE}user_name=%{QUOTEDSTRING:user_name}%{SPACE}user_gp=%{QUOTEDSTRING:user_group}%{SPACE}iap=%{INT:iap}%{SPACE}ips_policy_id=%{INT:ips_policy_id}%{SPACE}appfilter_policy_id=%{INT:app_filter_policy_id}%{SPACE}application=%{QUOTEDSTRING:application}%{SPACE}application_risk=%{INT:application_risk}%{SPACE}application_technology=%{QUOTEDSTRING:application_technology}%{SPACE}application_category=%{QUOTEDSTRING:application_category}%{SPACE}in_interface=%{QUOTEDSTRING:in_interface}%{SPACE}out_interface=%{QUOTEDSTRING:out_interface}%{SPACE}src_mac=%{DATA:src_mac}%{SPACE}src_ip=%{DATA:src_ip}%{SPACE}src_country_code=%{DATA:src_country_code}%{SPACE}dst_ip=%{DATA:dst_ip}%{SPACE}dst_country_code=%{DATA:dst_country_code}%{SPACE}protocol=%{QUOTEDSTRING:protocol}%{SPACE}(src_port=%{INT:src_port}%{SPACE}dst_port=%{INT:dst_port})?(icmp_type=%{INT:icmp_type}%{SPACE}icmp_code=%{INT:icmp_code})?%{SPACE}sent_pkts=%{INT:sent_pkts;int}%{SPACE}recv_pkts=%{INT:recv_pkts;int}%{SPACE}sent_bytes=%{INT:sent_bytes;int}%{SPACE}recv_bytes=%{INT:recv_bytes;int}%{SPACE}tran_src_ip=%{DATA:tran_src_ip}%{SPACE}tran_src_port=%{INT:tran_src_port}%{SPACE}tran_dst_ip=%{DATA:tran_dst_ip}%{SPACE}tran_dst_port=%{INT:tran_dst_port}%{SPACE}srczonetype=%{QUOTEDSTRING:src_zone_type}%{SPACE}srczone=%{QUOTEDSTRING:src_zone}%{SPACE}dstzonetype=%{QUOTEDSTRING:dst_zone_type}%{SPACE}dstzone=%{QUOTEDSTRING:dst_zone}%{SPACE}dir_disp=%{QUOTEDSTRING:dir_disp}%{SPACE}(connevent=%{QUOTEDSTRING:conn_event})?%{SPACE}connid=%{QUOTEDSTRING:conn_id}%{SPACE}vconnid=%{QUOTEDSTRING:v_conn_id}%{SPACE}hb_health=%{QUOTEDSTRING:hb_health}%{SPACE}message=%{QUOTEDSTRING:fw_message}%{SPACE}appresolvedby=%{QUOTEDSTRING:app_resolved_by}%{SPACE}app_is_cloud=%{INT:app_is_cloud;boolean}\",\n            value: to_string($message.message),\n            only_named_captures: true\n        )\n    );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "93f24958-868e-4840-baef-578974185e97",
      "data": {
        "title": {
          "@type": "string",
          "@value": "XG GUI Event Type"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"XG GUI Event Type\"\nwhen\n    to_string($message.log_type) == \"Event\" && to_string($message.log_component) == \"GUI\"\nthen\n    set_fields(\n        grok(\n            pattern: \"status=%{DATA:QUOTEDSTRING}%{SPACE}priority=%{WORD:priority}%{SPACE}user_name=%{QUOTEDSTRING:user_name}%{SPACE}src_ip=%{DATA:src_ip}%{SPACE}ZONE=%{QUOTEDSTRING:zone}%{SPACE}message=%{QUOTEDSTRING:event_message}\",\n            value: to_string($message.message),\n            only_named_captures: true\n        )\n    );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "a1830a1d-c932-4cf4-8766-e0a858c911d7",
      "data": {
        "title": {
          "@type": "string",
          "@value": "XG IDP Type"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"XG IDP Type\"\nwhen\n    to_string($message.log_type) == \"IDP\"\nthen\n    set_fields(\n        grok(\n            pattern: \"priority=%{WORD:priority}%{SPACE}idp_policy_id=%{INT:idp_policy_id}%{SPACE}fw_rule_id=%{INT:fw_rule_id}%{SPACE}user_name=%{QUOTEDSTRING:user_name}%{SPACE}signature_id=%{INT:signature_id}%{SPACE}signature_msg=%{QUOTEDSTRING:signature_msg}%{SPACE}classification=%{QUOTEDSTRING:classification}%{SPACE}rule_priority=%{INT:rule_priority}%{SPACE}src_ip=%{DATA:src_ip}%{SPACE}src_country_code=%{DATA:src_country_code}%{SPACE}dst_ip=%{DATA:dst_ip}%{SPACE}dst_country_code=%{DATA:dst_country_code}%{SPACE}protocol=%{QUOTEDSTRING:protocol}%{SPACE}src_port=%{INT:src_port}%{SPACE}dst_port=%{INT:dst_port}%{SPACE}platform=%{QUOTEDSTRING:platform}%{SPACE}category=%{QUOTEDSTRING:category}%{SPACE}target=%{QUOTEDSTRING:target}\",\n            value: to_string($message.message),\n            only_named_captures: true\n        )\n    );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    },
    {
      "v": "1",
      "type": {
        "name": "pipeline_rule",
        "version": "1"
      },
      "id": "bc4fe7d8-5375-4a1a-aa2b-ef3cf6de58a8",
      "data": {
        "title": {
          "@type": "string",
          "@value": "XG SMTP Type"
        },
        "description": {
          "@type": "string",
          "@value": ""
        },
        "source": {
          "@type": "string",
          "@value": "rule \"XG SMTP Type\"\nwhen\n    to_string($message.log_component) == \"SMTP\"\nthen\n    set_fields(\n        grok(\n            pattern: \"priority=%{WORD:priority}%{SPACE}fw_rule_id=%{INT:fw_rule_id}%{SPACE}user_name=%{QUOTEDSTRING:user_name}%{GREEDYDATA}from_email_address=%{QUOTEDSTRING:from_email_address}%{SPACE}to_email_address=%{QUOTEDSTRING:to_email_address}%{SPACE}email_subject=%{QUOTEDSTRING:email_subject}%{GREEDYDATA}src_domainname=%{QUOTEDSTRING:src_domain}\",\n            value: to_string($message.message),\n            only_named_captures: true\n        )\n    );\nend"
        }
      },
      "constraints": [
        {
          "type": "server-version",
          "version": ">=3.3.0+4ea5649"
        }
      ]
    }
  ]
}